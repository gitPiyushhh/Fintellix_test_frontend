<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="UTF-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>Category Management</title>

    <!-- Icons -->
    <script src="https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700&family=Open+Sans:ital,wght@0,300;0,400;0,500;1,300;1,600&display=swap"
      rel="stylesheet"
    />

    <!-- Kendo UI CSS -->

    <script type="text/javascript" src="lib/jquery.min.js"></script>

    <script type="text/javascript" src="lib/jquery.js"></script>
    <script src=".//js/components/questions.js"></script>

    <!-- <script type="text/javascript" src="lib/select2.js"></script> -->

    <link
      rel="stylesheet"
      type="text/css"
      media="screen"
      href="lib/jquery-ui.css"
    />

    <link
      rel="stylesheet"
      type="text/css"
      media="screen"
      href="lib/jquery-ui.min.css"
    />

    <!--Kendo-->

    <link
      rel="stylesheet"
      type="text/css"
      href="lib/kendo.default-v2.min.css"
    />

    <script type="text/javascript" src="./lib/kendo.all.min.js"></script>

    <link
      rel="stylesheet"
      type="text/css"
      href="css\font-awesome-4.7.0\css\font-awesome.min.css"
    />

    <!-- <link rel="stylesheet" type="text/css" href="css/font-awesome.css" />  -->

    <link rel="stylesheet" href="./css/addQuestion.css" />
    <link rel="stylesheet" href="./css/createUser.css" />
    <link rel="stylesheet" href="./css/navbar.css" />
    <link rel="stylesheet" href="./css/ulitlities.css" />
    <link rel="stylesheet" href="./css/form.css" />
    <link rel="stylesheet" href="./css/popup.css" />
    <link rel="stylesheet" href="./css/scrollbar.css" />

    <script type="text/javascript" src="questionSection.js"></script>
  </head>
  <body>
    <div class="overlay u-display-none" id="categories__overlay">
      <div id="questionPopup" class="popup">
        <div class="popup__content">
          <span
            id="closeQuestion"
            class="popup__icon"
            style="float: right; cursor: pointer"
            >&times;</span
          >

          <h3 class="popup__title">Questions</h3>

          <div id="addQuestionsGrid" class="popup__content"></div>
        </div>
      </div>
    </div>
    


    <div class="overlay u-display-none" id="questions__overlay">
      <div id="questionPopup" class="popup">
        <div class="popup__content">
          <span
            id="closeQuestion2"
            class="popup__icon"
            style="float: right; cursor: pointer"
            >&times;</span
          >

          <h3 class="popup__title">Questions</h3>

          <div id="popupAddQuestions" class="popup__content"></div>
        </div>
      </div>
    </div>

    <div class="overlay u-display-none" id="editCategoryPopup">
      <div
        class="form-container u-flex"
        style="height: 80%; position: relative"
      >
        <div class="u-flex-col form__inner-container" style="width: 100%">
          <h1>Create section</h1>
          <span
            id="closeEditQuestion"
            class="popup__icon"
            style="float: right; cursor: pointer"
            >&times;</span
          >

          <form action="#" method="post">
            <label for="name">Section name:*</label>
            <input
              type="text"
              id="name"
              name="name"
              class="form__input-box"
              required
            />

            <label for="category">Categories type:*</label>
            <select
              id="category"
              class="form__input-box"
              style="font-size: 14px; color: #565656; padding-right: 1rem"
            >
              <option disabled selected value="">Select from options</option>
              <option value="easy">Programming</option>
              <option value="medium">Logical</option>
              <option value="hard">Aptitude</option>
            </select>

            <label for="time">Time limit (in minutes):</label>
            <input
              type="number"
              id="time"
              name="email"
              class="form__input-box"
              required
            />

            <label for="time">Pass percentage:</label>
            <input
              type="number"
              id="time"
              name="email"
              class="form__input-box"
              required
            />

            <div class="button-container-2">
              <button type="submit" class="add-button">Add</button>
              <button type="button" class="cancel-button">Cancel</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <nav class="navbar">
      <ul class="u-flex">
        <a class="logo" href="./index.html" style="cursor: pointer">
          <img
            src="./../../Drawables/FIntellix Logo.svg"
            alt="Website logo"
            class="navbar__logo"
          />
        </a>
        <div class="u-flex">
          <li class="dropdown">
            <a href="#" class="dropbtn">Home</a>
          </li>
          <li class="dropdown">
            <a href="./questions.html" class="dropbtn">Questions</a>
          </li>
          <li class="dropdown">
            <a href="./categories.html" class="dropbtn">Categories</a>
          </li>
          <li>
            <a href="#" class="dropbtn" style="text-decoration: none"
              >Analytics</a
            >
          </li>

          <li>
            <a href="#" class="dropbtn" style="text-decoration: none"
              >Certifications</a
            >
          </li>

          <li>
            <a href="./user.html" class="dropbtn" style="text-decoration: none"
              >Users</a
            >
          </li>

          <li class="userAvatar" style="margin-left: 1rem"></li>
        </div>
      </ul>
    </nav>

    <div class="user__button">
      <div class="user__button-inner" style="justify-content: flex-end">
        <a
          class="button u-flex"
          style="
            background-color: #1a7aaf;
            justify-self: flex-end;
            padding: 0.75rem 1.5rem;
            margin-top: 0.5rem;
          "
          href="#"
          id="showCategoriesButton"
        >
          Add Section
          <iconify-icon
            icon="zondicons:add-outline"
            style="margin-left: 8px"
          ></iconify-icon>
        </a>
      </div>
    </div>

    <div
      class="wrapper u-display-none"
      style="margin-top: 3rem"
      id="categories__main-content"
    >
      <div class="form-container u-flex" style="position: relative">
        <div
          class="u-flex-col form__inner-container"
          style="width: 100%; margin-top: 2rem"
        >
          <h1>Create section</h1>
          <span
            id="closeMainContent"
            class="popup__icon"
            style="float: right; cursor: pointer"
            >&times;</span
          >

          <form action="#" method="post">
            <label for="name">Section name:*</label>
            <input
              type="text"
              id="name"
              name="name"
              class="form__input-box"
              required
            />

            <label for="category">Categories type:*</label>
            <select
              id="category"
              class="form__input-box"
              style="font-size: 14px; color: #565656; padding-right: 1rem"
            >
              <option disabled selected value="">Select from options</option>
              <option value="easy">Programming</option>
              <option value="medium">Logical</option>
              <option value="hard">Aptitude</option>
            </select>

            <label for="time">Time limit (in minutes):</label>
            <input
              type="number"
              id="time"
              name="email"
              class="form__input-box"
              required
            />

            <label for="time">Pass percentage:</label>
            <input
              type="number"
              id="time"
              name="email"
              class="form__input-box"
              required
            />

            <div class="button-container-2">
              <button type="submit" class="add-button">Add</button>
              <button type="button" class="cancel-button">Cancel</button>
            </div>

            <div class="button-container-2">
              <a
                type="button"
                class="add-button"
                style="text-align: center; width: 35%"
                onclick="openQuestionPopup1()"
                id="addQuestionGridElem"
                >Select questions</a
              >
            </div>

            <h3 class="popup__title">Questions</h3>
            <div id="addQuestionsGridCustom" class=""></div>
          </form>
        </div>
      </div>
    </div>

    <!-- Grid  -->
    <div
      id="categories__grid"
      style="margin-top: 1.5rem"
      class="grid categories__grid"
    ></div>

    <script>
      //////////////////////////
      //// Remove me
      var questions = [
        { questionId: 1, questionText: "What is 2 + 2?", difficulty: "Easy" },

        {
          questionId: 2,
          questionText: "What is the capital of France?",
          difficulty: "Medium",
        },

        {
          questionId: 3,
          questionText: "What is the square root of 16?",
          difficulty: "Easy",
        },
      ];

      loadCategoryData();
      console.log("Hiiiiiii");

      loadCategoryDataForm();
      loadQuestionsPopup();

      ////////////////////////////////////
      ////

      const showCategoriesButton = document.getElementById(
        "showCategoriesButton"
      );
      showCategoriesButton.addEventListener("click", () => {
        const mainContent = document.getElementById("categories__main-content");
        mainContent.classList.remove("u-display-none");
      });

      const closeMainContent = document.getElementById("closeMainContent");
      closeMainContent.addEventListener("click", () => {
        const mainContent = document.getElementById("categories__main-content");
        mainContent.classList.add("u-display-none");
      });

      const closeEditQuestion = document.getElementById("closeEditQuestion");
      closeEditQuestion.addEventListener("click", () => {
        const overlay = document.getElementById("editCategoryPopup");
        overlay.classList.add("u-display-none");

        // const mainContent = document.getElementById("categories__main-content");
        // mainContent.classList.remove("u-display-none");
      });

      const closeQuestion2 = document.getElementById("closeQuestion2");
      closeQuestion2.addEventListener("click", () => {
        console.log("Close button clicked 11");

        const overlay = document.getElementById("questions__overlay");
        overlay.classList.add("u-display-none");

        const mainContent = document.getElementById("categories__main-content");
        mainContent.classList.remove("u-display-none");
      });

      const closeButton = document.getElementById("closeQuestion");
      closeButton.addEventListener("click", () => {
        console.log("Close button clicked");

        const overlay = document.getElementById("categories__overlay");
        overlay.classList.add("u-display-none");

        // const mainContent = document.getElementById("categories__main-content");
        // mainContent.classList.remove("u-display-none");
      });

      // Function to load the "Add New Category" form into the main-content

      function loadCategoryData() {
        // Hard-coded categories

        const categoriesArray = [
          {
            cid: 1,
            sectionName: "Java Easy for Freshers",
            category_type: "Programming",
          },

          {
            cid: 2,
            sectionName: "Java Test for 2-year Ex",
            category_type: "Java",
          },

          {
            cid: 3,
            sectionName: "SQL Test for 2-year Ex",
            category_type: "SQL",
          },
        ];

        // Define a Kendo DataSource with the hard-coded data

        const dataSource1 = new kendo.data.DataSource({
          data: categoriesArray,
        });

        // Create and append a div for the grid to the main content

        const mainContent = $("#categories__grid");

        mainContent.empty(); // Clear the main content

        //const gridDiv = $("<div id='grid'></div>");
        const gridDiv = $("<div id='grid'></div>");

        mainContent.append(gridDiv);

        // Initialize the Kendo Grid inside the grid div

        gridDiv.kendoGrid({
          dataSource: dataSource1,

          height: 250,
          sortable: true,
          pageable: { pageSize: true },
          filterable: true,

          columns: [
            { field: "cid", title: "cid", width: "50px" },

            { field: "sectionName", title: "sectionName", width: "200px" },

            { field: "category_type", title: "Category Title", width: "200px" },

            {
              title: "Actions",

              template: `
                    <button class="k-button" onclick="loadquestionsSection(#: cid#)">ViewQuestions</button>

                          <button class="k-button" onclick="editCategory(#: cid#)">Edit</button>

                          <button class="k-button" onclick="deleteSection(#: cid#)">Delete</button>
          `,
              width: "200px",
            },
          ],

          footer: "Total: #= kendo.toString(sum, 'c') #",
        });
      }

      function loadCategoryDataForm() {
        const questionDataSource = new kendo.data.DataSource({
          data: questions,
        });

        // Initialize the Kendo Grid for questions

        $("#addQuestionsGridCustom").kendoGrid({
          dataSource: questionDataSource,

          columns: [
            { field: "questionId", title: "Question ID" },

            { field: "questionText", title: "Question Text" },

            { field: "difficulty", title: "Difficulty" },

            // Add more columns as needed

            {
              title: "Select",

              template: '<input type="checkbox" class="question-checkbox" />',

              width: 60,
            },
          ],
        });
      }

      function loadQuestionsPopup00000000000000() {
        const questionDataSource = new kendo.data.DataSource({
          data: questions,
        });

        // Initialize the Kendo Grid for questions

        $("#popupAddQuestions").kendoGrid({
          dataSource: questionDataSource,

          columns: [
            { field: "questionId", title: "Question ID" },

            { field: "questionText", title: "Question Text" },

            { field: "difficulty", title: "Difficulty" },

            // Add more columns as needed

            {
              title: "Select",

              template: '<input type="checkbox" class="question-checkbox" />',

              width: 60,
            },
          ],
        });
      }


      function loadAddCategoryForm1() {
        const mainContent = $("#main-content");

        mainContent.empty(); // Clear the main content

        const categoryForm = `
          `;

        mainContent.append(categoryForm);

        // Create a Kendo DataSource with the hard-coded questions

        const questionDataSource = new kendo.data.DataSource({
          data: questions,
        });

        // Initialize the Kendo Grid for questions

        $("#categoryDialog").kendoGrid({
          dataSource: questionDataSource,

          columns: [
            { field: "questionId", title: "Question ID" },

            { field: "questionText", title: "Question Text" },

            { field: "difficulty", title: "Difficulty" },

            // Add more columns as needed

            {
              title: "Select",

              template: '<input type="checkbox" class="question-checkbox" />',

              width: 60,
            },
          ],
        });

        // Add click event handler for the "Add Questions" button

        $("#addQuestionsButton").on("click", function () {
          // Open the question popup with checkboxes

          openQuestionPopup();
        });
      }

      // Function to open the question popup

      function openQuestionPopup() {
        // Create a Kendo DataSource with the hard-coded questions

        const questionDataSource = new kendo.data.DataSource({
          data: questions,
        });

        // Initialize the Kendo Grid for questions with checkboxes

        $("#questionPopup1").kendoGrid({
          dataSource: questionDataSource,

          columns: [
            {
              title: "Select",

              template: '<input type="checkbox" class="question-checkbox" />',

              width: 60,
            },

            { field: "questionId", title: "Question ID" },

            { field: "questionText", title: "Question Text" },

            { field: "difficulty", title: "Difficulty" },

            // Add more columns as needed
          ],
        });

        // Show the question popup

        $("#questionPopup1").show("slow");
      }

      //////////////////////////////////////////////////////////////
      ///////

      document
        .getElementById("addQuestionGridElem")
        .addEventListener("click", () => {
          // const addQuestionsGridCustom = document.getElementById(
          //   "addQuestionGridElem"
          // );

          // const categories__grid = document.getElementById("categories__grid");

          // addQuestionsGridCustom.classList.remove("u-display-none");
          // categories__grid.classList.add("u-display-none");

          const questions__overlay = document.getElementById("questions__overlay");
        questions__overlay.classList.remove("u-display-none");

        const mainContent = document.getElementById("categories__main-content");
        mainContent.classList.add("u-display-none");
        });

      function openQuestionPopup1() {
        // Create a Kendo DataSource with the hard-coded questions

        const questionDataSource = new kendo.data.DataSource({
          data: questions,
        });

        // Initialize the Kendo Grid for questions with checkboxes

        $("#addQuestionsGrid").kendoGrid({
          dataSource: questionDataSource,

          columns: [
            {
              title: "Select",

              template: '<input type="checkbox" class="question-checkbox" />',

              width: 60,
            },

            { field: "questionId", title: "Question ID" },

            { field: "questionText", title: "Question Text" },

            { field: "difficulty", title: "Difficulty" },

            // Add more columns as needed
          ],
        });

        // Show the question popup

        $("#addQuestionsGrid").show("slow");

        console.log("doneeeee");
      }

      // Event handler for the "Show Categories" button click

      $("#showCategories").on("click", function () {
        loadCategoryData();
      });

      $("#addSection").on("click", function () {
        loadAddCategoryForm();
      });

      $("#loadAnalytics").on("click", function () {
        loadAnalyticsData();
      });

      function loadquestionsSection(cid) {
        showQuestionsPopup();
      }

      function showQuestionsPopup() {
        // Create a Kendo DataSource with the hard-coded questions
        const overlay = document.getElementById("categories__overlay");
        overlay.classList.remove("u-display-none");

        const mainContent = document.getElementById("categories__main-content");
        mainContent.classList.add("u-display-none");

        const questionDataSource = new kendo.data.DataSource({
          data: questions,
        });

        // Initialize the Kendo Grid for questions

        $("#addQuestionsGrid").kendoGrid({
          dataSource: questionDataSource,

          columns: [
            { field: "questionId", title: "Question ID" },

            { field: "questionText", title: "Question Text" },

            { field: "difficulty", title: "Difficulty" },

            // Add more columns as needed
          ],
        });

        // Show the question popup

        $("#questionPopup").show("slow");
      }

      $("#closeQuestion").on("click", function () {
        // Hide the questionPopup modal

        $("#questionPopup").hide();

        // Clear the content of the questionGrid

        $("#questionGrid").html("");
      });

      $("#closeEditSection").on("click", function () {
        $("#editCategoryPopUp").css("display", "none");
      });

      $("#closeQuestionform").on("click", function () {
        // Close the question popup

        console.log("Done");

        document.getElementById("questionPopup1").innerHTML = "";
      });

      function editCategory(cid) {
        const popupEdit = document.getElementById("editCategoryPopup");
        popupEdit.classList.remove("u-display-none");

        const categories__mainContent = document.getElementById(
          "categories__main-content"
        );
        categories__mainContent.classList.add("u-display-none");
      }

      function deleteCategory(cid) {}

      questions = [
        { questionId: 1, questionText: "What is 2 + 2?", difficulty: "Easy" },

        {
          questionId: 2,
          questionText: "What is the capital of France?",
          difficulty: "Medium",
        },

        {
          questionId: 3,
          questionText: "What is the square root of 16?",
          difficulty: "Easy",
        },
      ];

      function loadAnalyticsData() {
        const contentSection = document.querySelector("#main-content");

        const getResultUrl = "/user/userResponses";

        const resultArray = [
          {
            fullName: "John Doe",

            examTitle: "Math Test",

            submitDate: "2023-09-20",

            totalMarks: 90,

            passFail: "Pass",
          },

          {
            fullName: "Alice Smith",

            examTitle: "Science Quiz",

            submitDate: "2023-09-19",

            totalMarks: 75,

            passFail: "Pass",
          },

          {
            fullName: "Bob Johnson",

            examTitle: "History Exam",

            submitDate: "2023-09-18",

            totalMarks: 60,

            passFail: "Fail",
          },

          {
            fullName: "Eve Williams",

            examTitle: "English Test",

            submitDate: "2023-09-17",

            totalMarks: 85,

            passFail: "Pass",
          },

          {
            fullName: "Charlie Brown",

            examTitle: "Geography Quiz",

            submitDate: "2023-09-16",

            totalMarks: 70,

            passFail: "Pass",
          },

          {
            fullName: "Grace Davis",

            examTitle: "Chemistry Test",

            submitDate: "2023-09-15",

            totalMarks: 55,

            passFail: "Fail",
          },

          {
            fullName: "Frank Wilson",

            examTitle: "Physics Exam",

            submitDate: "2023-09-14",

            totalMarks: 92,

            passFail: "Pass",
          },
        ];

        //     if (resultArray.length > 0) {

        contentSection.innerHTML = "<h2>Results</h2>";

        const grid = $("#main-content").kendoGrid({
          dataSource: {
            data: resultArray,

            pageSize: 7,
          },

          height: 450,

          sortable: true,

          pageable: { pageSizes: true },

          filterable: true,

          columns: [
            { field: "fullName", title: "Full Name" },

            { field: "examTitle", title: "Exam Title" },

            { field: "submitDate", title: "Date of Submission" },

            { field: "totalMarks", title: "Total Marks" },

            { field: "passFail", title: "Pass/Fail" },

            {
              title: "Actions",

              template:
                '<button class="k-button k-grid-view-analytic" onclick="viewUserAnalytic(this)">View Analytic</button>',
            },
          ],
        });
      }

      //}})}
    </script>

    <script src=".//js/components/questions.js"></script>
  </body>
</html>
